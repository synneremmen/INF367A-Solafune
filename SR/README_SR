# DSen2 - Implemented for GeoTIFF using pretrained weights(superresolution.py)

## Overview

DSen2 the superresolution network was introdudiced in paper, and works by training two neural nets one for superresoving from 20m and another for 60m. We therefore need to download to pretrained wiegs. 
Sentinel-2A satellite imagery contains 12 spectral bands, acquired at three different resolutions, referred to as ground sampling distances (GSDs). 10m, 20m and 60m the higher the GSD the more blurry and lack of detail the band has.
We therefore want to use a super-resolution tool such as DSen2 to superresolve the lower resolution band.
There are other ways to upsample, but DSen2 does something which was novel at the time if we have a multiband image then we use that image

The orginal authors do have their code published, but this is implemented in Keras and only works on real Sentinel-2A products in a hieracrhicl .safe folder format which contains metadata which we do notr have with our GeoTIFF.
RSP have made a pytorch implementation of DSen2, but this also only works on .safe, but we can use the weights from this implementation for our own GeoTIFF implementation.

## Method

I desrcibe my implementaion of the method into the project here.

## Installation and Setup

1. **Install global requirements**

    Ensure dependencies is installed by the global requirements.txt

2. **Download the pretrained weights from (https://doi.org/10.5281/zenodo.11091321)**

    src/
        remote_sensing_processor/
            sentinel2/
                superres/
                    weights/
                        L2A20M.pt
                        L2A60M.pt

    Place the weights in the environment

3. **Add the required paths in .env**

    ```
    IMAGES_PATH=path/to/images
    SR_IMAGES_PATH = path/to/superresolved_images
    SR_20M_PATH = path/to/superresolution_20m_model
    SR_60M_PATH = path/to/superresolution_60m_model
    ```

4. **Details for running**

    You can generate the superresolved images by running superresolution.py
    They will also be generated if you run main.py using mode "SR"

## Usage

Implemented for GeoTIFF instead of the orginal Sentinel-2A product.
Superresolves whole folder of GeoTIFF Sentinel-2A images, using pretrained weights.
These are then saved using the desired path from .env.

## Citation

```
@article{LANARAS2018305,
title = {Super-resolution of Sentinel-2 images: Learning a globally applicable deep neural network},
journal = {ISPRS Journal of Photogrammetry and Remote Sensing},
volume = {146},
pages = {305-319},
year = {2018},
issn = {0924-2716},
doi = {https://doi.org/10.1016/j.isprsjprs.2018.09.018},
url = {https://www.sciencedirect.com/science/article/pii/S0924271618302636},
author = {Charis Lanaras and JosÃ© Bioucas-Dias and Silvano Galliani and Emmanuel Baltsavias and Konrad Schindler},
}
```

> github DSen2 (orginal implementation). https://github.com/lanha/DSen2
> doi.org RemoteSensingProcessor (weights). https://doi.org/10.5281/zenodo.11091321